{
    "contents" : "---\ntitle: \"Practical Machine Learning - Course Project\"\noutput: html_document\n---\n\n## Introduction  \nUsing devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: [http://groupware.les.inf.puc-rio.br/har](http://groupware.les.inf.puc-rio.br/har) (see the section on the Weight Lifting Exercise Dataset).\n\n\nIn this project, our goal is to use the data to predict the manner in which they did the exercise.\n\n\n## Data Processing  \n```{r warning=FALSE,results='hide', message=FALSE}\nlibrary(caret)\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(randomForest)\nlibrary(corrplot)\nlibrary(e1071)\n```\nSet the seed to ensure reproduceablity\n```{r}\nset.seed(12345)\n```\n\n### Download the Data\n```{r}\ntrainingDataUrl <-\"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv\"\ntestDataUrl <- \"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv\"\n\nif (!file.exists(\"./data\")) {\n  dir.create(\"./data\")\n}\nif (!file.exists(\"./data/pml-training.csv\")) {\n  download.file(trainingDataUrl, destfile=\"./data/pml-training.csv\", method=\"curl\")\n  \n}\nif (!file.exists(\"./data/pml-testing.csv\")) {\n  download.file(testDataUrl, destfile=\"./data/pml-testing.csv\", method=\"curl\")\n}\n```\n\n### Read the Data\n```{r}\ntrainingDataRaw <- read.csv(\"./data/pml-training.csv\")\ntestDataRaw <- read.csv(\"./data/pml-testing.csv\")\ndim(trainingDataRaw)\ndim(testDataRaw)\n```\nThe training data set contains `r dim(trainingDataRaw)[1]` observations and `r dim(trainingDataRaw)[2]` variables, while the testing data set contains `r dim(testDataRaw)[1]` observations and `r dim(testDataRaw)[2]` variables. The \"classe\" variable in the training set is the outcome to predict. \n\n### Data Cleaning\nRemove columns that contain NA missing value\n```{r}\ntrainingDataRaw <- trainingDataRaw[, colSums(is.na(trainingDataRaw)) == 0] \ntestDataRaw <- testDataRaw[, colSums(is.na(testDataRaw)) == 0] \n```\nRemove columns that do not contribute to the accelerometer measurements.\n```{r}\nclasse <- trainingDataRaw$classe\ntrainingDataRemove <- grepl(\"^X|timestamp|window\", names(trainingDataRaw))\ntrainingDataRaw <- trainingDataRaw[, !trainingDataRemove]\ntrainingDataCleaned <- trainingDataRaw[, sapply(trainingDataRaw, is.numeric)]\ntrainingDataCleaned$classe <- classe\ntestDataRemove <- grepl(\"^X|timestamp|window\", names(testDataRaw))\ntestDataRaw <- testDataRaw[, !testDataRemove]\ntestDataCleaned <- testDataRaw[, sapply(testDataRaw, is.numeric)]\n```\nThe cleaned training data set contains `r dim(trainingDataCleaned)[1]` observations and `r dim(trainingDataCleaned)[2]` variables, while the testing data set contains `r dim(testDataCleaned)[1]` observations and `r dim(testDataCleaned)[2]` variables. The \"classe\" variable is still in the cleaned training set.\n\n### Partitioning the Data\n```{r}\ninTraining <- createDataPartition(trainingDataCleaned$classe, p=0.70, list=F)\ntrainingData <- trainingDataCleaned[inTraining, ]\ntestData <- trainingDataCleaned[-inTraining, ]\n```\n\n### Modeling\nWe creates a predictive model for activity recognition using Random Forest algorithm and applying 5-fold cross validation to the algorithm.\n\n```{r}\ncontrolRandomForest <- trainControl(method=\"cv\", 5)\nmodelRandomForest <- train(classe ~ ., data=trainingData , method=\"rf\", trControl=controlRandomForest, ntree=250)\nmodelRandomForest\n```\n\nNext, using the validation data set, we estimate the performance of the model.\n\n```{r}\npredictRandomForest <- predict(modelRandomForest, testData)\nconfusionMatrix(testData$classe, predictRandomForest)\n```\n\n```{r}\naccuracy <- postResample(predictRandomForest, testData$classe)\naccuracy\n```\n\n```{r}\noutOfSampleError <- 1 - as.numeric(confusionMatrix(testData$classe, predictRandomForest)$overall[1])\noutOfSampleError \n```\n\nHence, the estimated accuracy of the model is `r paste(round(accuracy[1], 2), \"%\", sep=\"\")` and the estimated out-of-sample error is `r paste(round(outOfSampleError, 2), \"%\", sep=\"\")`.\n\n### Result\n```{r}\nresult <- predict(modelRandomForest, testDataCleaned[, -length(names(testDataCleaned))])\nresult\n```\n\n### Prediction Assignment Submission\n```{r}\nif (!file.exists(\"./answers\")) {\n  dir.create(\"./answers\")\n}\n\npml_write_files = function(x){\n  n = length(x)\n  for(i in 1:n){\n    filename = paste0(\"./answers/problem_id_\",i,\".txt\")\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\n  }\n}\n```\n\n```{r}\npml_write_files(result)\n```\n",
    "created" : 1427044416018.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2511465440",
    "id" : "24FA943E",
    "lastKnownWriteTime" : 1427051662,
    "path" : "D:/Google Drive/IDA for Data Science & Analytics MOOC Pilot Programme/08. Practical Machine Learning/Course Project/Report.Rmd",
    "project_path" : "Report.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}